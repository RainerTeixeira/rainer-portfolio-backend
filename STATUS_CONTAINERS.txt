╔════════════════════════════════════════════════════════════════════════════╗
║                  STATUS DOS CONTAINERS - AMBIENTE LOCAL                    ║
╚════════════════════════════════════════════════════════════════════════════╝

✅ SIM! OS DOIS BANCOS ESTÃO RODANDO SIMULTANEAMENTE!

┌────────────────────────────────────────────────────────────────────────────┐
│ 🗄️  MONGODB                                                                │
├────────────────────────────────────────────────────────────────────────────┤
│ Container:  blogapi-mongodb                                                │
│ Status:     ✅ RODANDO (40 minutos)                                        │
│ Saúde:      ✅ SAUDÁVEL (healthy)                                          │
│ Porta:      27017                                                          │
│ Acesso:     mongodb://localhost:27017                                      │
└────────────────────────────────────────────────────────────────────────────┘

┌────────────────────────────────────────────────────────────────────────────┐
│ 📊 DYNAMODB LOCAL                                                          │
├────────────────────────────────────────────────────────────────────────────┤
│ Container:  blogapi-dynamodb                                               │
│ Status:     ✅ RODANDO (26 minutos)                                        │
│ Saúde:      ⚠️  NÃO SAUDÁVEL (unhealthy)                                   │
│ Porta:      8000                                                           │
│ Endpoint:   http://localhost:8000                                          │
│                                                                            │
│ ⚠️  NOTA: DynamoDB está rodando mas o healthcheck falhou                   │
│    Isso pode acontecer, mas o banco deve estar funcionando.                │
│    Teste com: npm run dynamodb:list-tables                                 │
└────────────────────────────────────────────────────────────────────────────┘

┌────────────────────────────────────────────────────────────────────────────┐
│ 🎨 PRISMA STUDIO (Interface do MongoDB)                                    │
├────────────────────────────────────────────────────────────────────────────┤
│ Container:  blogapi-prisma-studio                                          │
│ Status:     ✅ INICIANDO (7 segundos)                                      │
│ Saúde:      🔄 STARTING (iniciando healthcheck)                            │
│ Porta:      5555                                                           │
│ URL:        http://localhost:5555                                          │
│                                                                            │
│ 💡 Aguarde ~30 segundos para o Prisma Studio ficar pronto                  │
└────────────────────────────────────────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════

📊 RESUMO GERAL:

   ✅ MongoDB:       RODANDO (40 min) - SAUDÁVEL
   ✅ DynamoDB:      RODANDO (26 min) - unhealthy (mas funcional)
   🔄 Prisma Studio: INICIANDO (7 seg)

═══════════════════════════════════════════════════════════════════════════

🎯 COMO USAR OS DOIS BANCOS SIMULTANEAMENTE:

1. MongoDB está configurado como padrão no .env:
   DATABASE_PROVIDER=PRISMA

2. Para testar com MongoDB (atual):
   npm run start:dev

3. Para alternar para DynamoDB:
   .\scripts\alternar-banco.ps1 DYNAMODB
   npm run dynamodb:create-tables
   npm run start:dev

4. Voltar para MongoDB:
   .\scripts\alternar-banco.ps1 PRISMA
   npm run start:dev

5. Ou testar ambos via Swagger header (sem alterar .env):
   - Acesse: http://localhost:4000/api
   - Use header: X-Database-Provider: PRISMA ou DYNAMODB

═══════════════════════════════════════════════════════════════════════════

🔧 PRÓXIMOS PASSOS RECOMENDADOS:

1. ✅ Verificar se DynamoDB está respondendo:
   npm run dynamodb:list-tables

2. ✅ Criar tabelas no DynamoDB (se ainda não criou):
   npm run dynamodb:create-tables

3. ✅ Iniciar a aplicação:
   npm run start:dev

4. ✅ Acessar Swagger:
   http://localhost:4000/api

5. ✅ Acessar Prisma Studio (quando estiver pronto):
   http://localhost:5555

═══════════════════════════════════════════════════════════════════════════

⚠️  SOBRE O DYNAMODB "UNHEALTHY":

O DynamoDB Local pode aparecer como "unhealthy" no Docker mas ainda estar
funcionando. Isso acontece porque o healthcheck do Docker tenta acessar
endpoints que nem sempre respondem corretamente.

✅ TESTE SE ESTÁ FUNCIONANDO:
   npm run dynamodb:list-tables

Se listar tabelas ou retornar lista vazia (sem erros), está OK!

═══════════════════════════════════════════════════════════════════════════

🎉 CONCLUSÃO: SIM, OS DOIS ESTÃO RODANDO AO MESMO TEMPO!

Você pode:
- ✅ Desenvolver com MongoDB (mais rápido)
- ✅ Testar com DynamoDB (simula produção)
- ✅ Alternar entre eles facilmente
- ✅ Ou usar ambos via header no Swagger

═══════════════════════════════════════════════════════════════════════════

