{
  "name": "blog-backend-serverless",
  "version": "1.0.0",
  "description": "Blog Backend com Fastify + DynamoDB + AWS Lambda",
  "main": "dist/main.js",
  "scripts": {
    "dev": "tsx watch src/main.ts",
    "dev:old": "tsx watch src/old.server.ts",
    "build": "nest build > logs/build.log 2>&1",
    "build:old": "tsc",
    "start": "node dist/main",
    "start:old": "node dist/server.js",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main.js > logs/production.log 2>&1",
    "test": "jest > logs/test.log 2>&1",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage > logs/coverage.log 2>&1",
    "test:log": "jest > logs/test.log 2>&1",
    "test:local-aws": "pwsh -File testar-local-antes-deploy.ps1",
    "lint": "eslint src --ext .ts > logs/lint.log 2>&1",
    "lint:fix": "eslint src --ext .ts --fix > logs/lint-fix.log 2>&1",
    "format": "prettier --write \"src/**/*.ts\" \"tests/**/*.ts\"",
    "sonar": "sonar-scanner",
    "dynamodb:create-tables": "tsx src/prisma/dynamodb.tables.ts > logs/dynamodb-create-tables.log 2>&1",
    "dynamodb:seed": "tsx src/prisma/dynamodb.seed.ts > logs/dynamodb-seed.log 2>&1",
    "dynamodb:list-tables": "aws dynamodb list-tables --endpoint-url http://localhost:8000 --region us-east-1",
    "dynamodb:admin": "echo Install dynamodb-admin: npm install -g dynamodb-admin && echo Run: dynamodb-admin",
    "docker:dynamodb": "docker-compose up -d dynamodb-local",
    "prisma:generate": "npx prisma generate --schema=src/prisma/schema.prisma",
    "prisma:push": "npx prisma db push --schema=src/prisma/schema.prisma",
    "prisma:studio": "npx prisma studio --schema=src/prisma/schema.prisma",
    "prisma:format": "npx prisma format --schema=src/prisma/schema.prisma",
    "prisma:seed": "tsx src/prisma/mongodb.seed.ts > logs/seed.log 2>&1",
    "mongodb:seed": "tsx src/prisma/mongodb.seed.ts > logs/seed.log 2>&1",
    "seed": "tsx src/prisma/mongodb.seed.ts > logs/seed.log 2>&1",
    "docker:up": "docker-compose up -d > logs/docker-up.log 2>&1",
    "docker:down": "docker-compose down > logs/docker-down.log 2>&1",
    "docker:logs": "docker-compose logs -f > logs/docker.log 2>&1",
    "docker:mongodb": "docker-compose up -d mongodb",
    "sam:validate": "cd src/lambda && sam validate > ../../logs/sam-validate.log 2>&1",
    "sam:build": "cd src/lambda && sam build > ../../logs/sam-build.log 2>&1",
    "sam:local": "cd src/lambda && sam local start-api --port 3000 > ../../logs/sam-local.log 2>&1",
    "sam:deploy": "npm run build && cd src/lambda && sam deploy > ../../logs/sam-deploy.log 2>&1",
    "sam:deploy:dev": "npm run build && cd src/lambda && sam deploy --config-env dev > ../../logs/sam-deploy-dev.log 2>&1",
    "sam:deploy:staging": "npm run build && cd src/lambda && sam deploy --config-env staging > ../../logs/sam-deploy-staging.log 2>&1",
    "sam:deploy:prod": "npm run build && cd src/lambda && sam deploy --config-env prod > ../../logs/sam-deploy-prod.log 2>&1",
    "sam:deploy:guided": "npm run build && cd src/lambda && sam deploy --guided > ../../logs/sam-deploy-guided.log 2>&1",
    "sam:logs": "cd src/lambda && sam logs -n BlogApiFunction --stack-name blog-backend-api --tail",
    "sam:delete": "cd src/lambda && sam delete",
    "deploy": "npm run sam:deploy",
    "package": "npm run build && zip -r function.zip dist node_modules package.json",
    "logs:clean": "powershell -Command \"Remove-Item logs/*.log -Force -ErrorAction SilentlyContinue\"",
    "logs:view": "powershell -Command \"Get-Content logs/app.log -Wait\""
  },
  "keywords": [
    "fastify",
    "typescript",
    "dynamodb",
    "aws",
    "lambda",
    "serverless",
    "blog",
    "api"
  ],
  "author": "",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0"
  },
  "dependencies": {
    "@aws-sdk/client-dynamodb": "^3.621.0",
    "@aws-sdk/lib-dynamodb": "^3.621.0",
    "@fastify/aws-lambda": "^4.1.0",
    "@fastify/cors": "^9.0.1",
    "@fastify/helmet": "^12.0.0",
    "@fastify/swagger": "^8.15.0",
    "@fastify/swagger-ui": "^4.1.0",
    "@nestjs/common": "^11.1.6",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.6",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-fastify": "^11.1.6",
    "@nestjs/swagger": "^11.2.0",
    "@prisma/client": "^6.17.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "dotenv": "^16.4.5",
    "fastify": "^4.28.1",
    "jwks-rsa": "^3.2.0",
    "nanoid": "^5.0.4",
    "nestjs-prisma": "^0.26.0",
    "nestjs-zod": "^5.0.1",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "pino": "^8.17.2",
    "pino-pretty": "^10.3.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@nestjs/cli": "^11.0.10",
    "@nestjs/testing": "^11.1.6",
    "@types/aws-lambda": "^8.10.143",
    "@types/jest": "^29.5.12",
    "@types/node": "^22.2.0",
    "@types/passport-jwt": "^4.0.1",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "esbuild": "^0.23.0",
    "eslint": "^8.57.0",
    "jest": "^29.7.0",
    "prettier": "^3.3.3",
    "prisma": "^6.17.1",
    "serverless": "^3.38.0",
    "serverless-esbuild": "^1.52.1",
    "serverless-offline": "^13.6.0",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.4",
    "ts-node": "^10.9.2",
    "tsx": "^4.17.0",
    "typescript": "^5.5.4"
  }
}
