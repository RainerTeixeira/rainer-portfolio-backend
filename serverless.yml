service: rp-dynamo-api
frameworkVersion: "4.0.38"

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: dev
  environment:
    NODE_ENV: ${self:provider.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    DYNAMO_TABLE_NAME_POSTS: Posts
    DYNAMO_TABLE_NAME_AUTHORS: Authors
    DYNAMO_TABLE_NAME_CATEGORIES: Categories
    DYNAMO_TABLE_NAME_COMMENTS: Comments
    DYNAMO_TABLE_NAME_SUBCATEGORY: Subcategory
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/*

functions:
  posts:
    handler: src/controller/blog/posts/posts.controller.main.lambda
    memorySize: 128          # Ajuste conforme a necessidade real
    timeout: 10              # Defina um timeout que garanta a execução sem desperdício
    events:
      - http:
          path: posts
          method: post
          cors: true
      - http:
          path: posts
          method: get
          cors: true
    url:
      cors: true

plugins:
  - serverless-offline
  - serverless-esbuild    # Certifique-se de ter este plugin instalado para otimizações

custom:
  esbuild:
    bundle: true
    minify: !Sub "${opt:stage, 'dev'} != 'dev'"
    sourcemap: true
    target: node20
    platform: node
    exclude: [aws-sdk]
  dynamodb:
    start:
      port: 8000
      migrate: true
      inMemory: true
    stages:
      - dev

resources:
  Resources:
    AuthorsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Authors
        AttributeDefinitions:
          - AttributeName: authorId
            AttributeType: S
        KeySchema:
          - AttributeName: authorId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    CategoriesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Categories
        AttributeDefinitions:
          - AttributeName: categoryId
            AttributeType: S
        KeySchema:
          - AttributeName: categoryId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    CommentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Comments
        AttributeDefinitions:
          - AttributeName: postId
            AttributeType: S
          - AttributeName: authorId
            AttributeType: S
        KeySchema:
          - AttributeName: postId
            KeyType: HASH
          - AttributeName: authorId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Posts
        AttributeDefinitions:
          - AttributeName: categoryId#subcategoryId
            AttributeType: S
          - AttributeName: postId
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: publishDate
            AttributeType: S
          - AttributeName: slug
            AttributeType: S
        KeySchema:
          - AttributeName: categoryId#subcategoryId
            KeyType: HASH
          - AttributeName: postId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: postsByPublishDate-index
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: publishDate
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: postId-index
            KeySchema:
              - AttributeName: postId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: slug-index
            KeySchema:
              - AttributeName: slug
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    SubcategoryTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Subcategory
        AttributeDefinitions:
          - AttributeName: categoryId#subcategoryId
            AttributeType: S
          - AttributeName: subcategoryId
            AttributeType: S
        KeySchema:
          - AttributeName: categoryId#subcategoryId
            KeyType: HASH
          - AttributeName: subcategoryId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

  Outputs:
    FunctionUrl:
      Description: Endpoint HTTP direto da Lambda
      Value:
        Fn::GetAtt: [PostsLambdaFunctionUrl, FunctionUrl]
